swagger: '2.0'
info:
  version: '1.0'
  title: Coding assignment for persons REST API
  description: "This is the portion of Coding assignment for persons REST API .


host: 'localhost:8080'
basePath: /
schemes:
  - http
  - https
paths:
  '/persons':
    get:
      summary: Expedient get all persons ordered by first name
      description: |
        Expedient get all persons ordered by first name
      responses:
        '200':
          description: The Persons are returned successfully.
          schema:
            $ref: '#/definitions/Persons'
        '500':
          description: The system encountered an internal error.
  '/persons/{id}':
    get:
      summary: Get Person by Id
      description: |
        Gets a single person with the specified person Id.
      parameters:
        - $ref: "#/parameters/Id"
      responses:
        '200':
          description: The person was returned successfully.
          schema:
            $ref: '#/definitions/Person'
        '500':
          description: The system encountered an internal error.
    put:
      summary: Update a Person
      description: |
        Updates an existing person.
      parameters:
        - $ref: "#/parameters/Id"
        - name: person
          in: body
          description: The new content to be applied to the existing person.
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        '200':
          description: The person was updated successfully.
          schema:
            $ref: '#/definitions/Person'
        '404':
          description: The person referenced by id is not found.
        '500':
          description: The system encountered an internal error.
   
    delete:
      summary: Delete a person
      description: |
        Deletes a person.
      parameters:
        - $ref: "#/parameters/Id"
      responses:
        '200':
          description: The person was deleted successfully.
        '500':
          description: The system encountered an internal error.
       
parameters:
  Id:
    name: "id"
    in: "path"
    required: true
    description: "A unique identifier for a resource"
    type: string
  Query:
    name: q
    in: query
    description: The search query criteria specified in the SCIM filter syntax.
    required: false
    type: string

  Fields:
    name: fields
    in: query
    description: A comma separated list of fields forming the projection (the fields to be returned). For example, id,name.
    required: false
    type: string

  OrderBy:
    name: orderBy
    in: query
    description: The sorting order criteria.
    required: false
    type: string

  Limit:
    name: limit
    in: query
    description: The number of records to be returned.
    required: false
    type: integer
    format: int32

  Offset:
    name: offset
    in: query
    description: The number of records skip from the response.
    required: false
    type: integer
    format: int32
    default: 0

  TotalResults:
    name: totalResults
    in: query
    description: Whether or not the count of total results is returned in the response.
    required: false
    type: boolean
    default: false
    
 

definitions:
  Person:
    type: object
    description: The Person details.
    properties:
      id:
        type: string
        description: The unique identifier for a person.
      first_name:
        type: string
        description: The person first name.
      last_name:
        type: string
        description: The person last name.
      age:
        type: integer
        format: int32
        description: The person age.
      favourite_color:
        type: string        
        description: The person favourite color.
      links:
        type: array
        description: |
          Links to related entities.
        items:
          $ref: '#/definitions/Link' 



  
  Link:
    type: object
    description: Link
    properties:
      id:
        type: string
        description: The link's ID.
      rel:
        type: string
        description: The link relationship, as defined by the [IANA link relationship registry](http://www.iana.org/assignments/link-relations/link-relations.xhtml).
      href:
        type: string
        description: The URL of the link.
      name:
        type: string
        description: The link name.
      notes:
        type: string
        description: The link description.
      mimeType:
        type: string
        description: The MIME type.
        
  